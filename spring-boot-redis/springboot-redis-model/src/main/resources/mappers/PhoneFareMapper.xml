<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.learn.springboot.redis.model.mapper.PhoneFareMapper" >
  <resultMap id="BaseResultMap" type="com.learn.springboot.redis.model.entity.PhoneFare" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="fare" property="fare" jdbcType="DECIMAL" />
    <result column="is_active" property="isActive" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, fare, is_active
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from phone_fare
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from phone_fare
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.learn.springboot.redis.model.entity.PhoneFare" >
    insert into phone_fare (id, phone, fare, 
      is_active)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{fare,jdbcType=DECIMAL}, 
      #{isActive,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.learn.springboot.redis.model.entity.PhoneFare" >
    insert into phone_fare
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="fare != null" >
        fare,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="fare != null" >
        #{fare,jdbcType=DECIMAL},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learn.springboot.redis.model.entity.PhoneFare" >
    update phone_fare
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="fare != null" >
        fare = #{fare,jdbcType=DECIMAL},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learn.springboot.redis.model.entity.PhoneFare" >
    update phone_fare
    set phone = #{phone,jdbcType=VARCHAR},
      fare = #{fare,jdbcType=DECIMAL},
      is_active = #{isActive,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="sortFareByPhone" resultType="com.learn.springboot.redis.model.entity.PhoneFare">
    SELECT
      phone,
      sum(fare) AS fare
    FROM phone_fare
    WHERE is_active = 1
    GROUP BY phone

    <choose>
      <when test="isAsc=1">
        ORDER BY fare ASC
      </when>
      <otherwise>
        ORDER BY fare DESC
      </otherwise>
    </choose>

  </select>


  <!--基于数据库记录的补偿排名机制-->
  <select id="getAllSortFares" resultType="com.learn.springboot.redis.model.entity.PhoneFare">
    SELECT
        phone,
        SUM(fare) AS fare
    FROM
        phone_fare
    GROUP BY
        phone
    ORDER BY
        fare DESC
  </select>

</mapper>

























