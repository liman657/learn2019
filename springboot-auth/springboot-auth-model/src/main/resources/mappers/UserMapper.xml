<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.springauthmodel.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="com.learn.springauthmodel.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_active" jdbcType="TINYINT" property="isActive" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_name, password, phone, email, is_active, create_time, update_time
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.learn.springauthmodel.entity.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (user_name, `password`, phone, 
      email, is_active, create_time, 
      update_time)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{isActive,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.learn.springauthmodel.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_name, `password`, phone, email, is_active, create_time, update_time
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_name, `password`, phone, email, is_active, create_time, update_time
    from user
  </select>

  <select id="selectByUserName" resultType="com.learn.springauthmodel.entity.User">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
      user
    WHERE
    is_active = 1
    AND user_name = #{userName}
  </select>

  <select id="selectByUserId" resultType="com.learn.springauthmodel.entity.User">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    `user`
    WHERE
    is_active = 1
    AND id = #{userId}
  </select>

  <update id="updatePassword">
    update user
    set password = #{newPassword},update_time=now()
    where is_active=1 and user_name=#{userName} and password=#{oldPassword}
  </update>


</mapper>